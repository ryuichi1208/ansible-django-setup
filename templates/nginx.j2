upstream {{ application_name }}_wsgi_server {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).

  server unix:{{ application_run_path }}/gunicorn.sock fail_timeout=0;
}

server {
    listen      80;
    server_name {{ application_domain }};


    rewrite     ^ https://$server_name$request_uri? permanent;
}

server {
    listen              443;
    server_name         {{ application_domain }};
    ssl on;

    ssl_certificate     {{ application_config_path }}/ssl/live/{{ application_domain }}/fullchain.pem;
    ssl_certificate_key {{ application_config_path }}/ssl/live/{{ application_domain }}/privkey.pem;

    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_prefer_server_ciphers on;
    ssl_dhparam          /etc/ssl/certs/dhparams.pem;

    client_max_body_size 4G;

    access_log {{ application_log_path }}/nginx_access.log;
    error_log {{ application_log_path }}/nginx_error.log;

    location /.well-known/ {
        alias   {{ application_www_path }}/.well-known/;
    }

    location /static/ {
        alias   {{ application_www_path }}/static/;
    }

    location /media/ {
        alias   {{ application_www_path }}/media/;
    }

    {% if django_enable_channels %}

    location / {

            proxy_pass http://unix:{{ application_run_path }}/daphne.sock;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
            proxy_set_header   X-Forwarded-Proto https;


      #  proxy_set_header Host $http_host;


    }

    {% else %}
    location / {
        if (-f {{ application_www_path }}/maintenance_on.html) {
            return 503;
        }

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Host $http_host;
        proxy_redirect off;

        # Try to serve static files from nginx, no point in making an
        # *application* server like Unicorn/Rainbows! serve static files.
        if (!-f $request_filename) {
            proxy_pass http://{{ application_name }}_wsgi_server;
            break;
        }
    }
    {% endif %}


    # Error pages
    error_page 500 502 504 /500.html;
    location = /500.html {
        root {{ application_templates_500 }}/;
    }

    error_page 503 /maintenance_on.html;
    location = /maintenance_on.html {
        root {{ application_www_path }}/;
    }
}
